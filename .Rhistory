# loading datasets
cali_fire <- read.csv(file = "data/cali_fire.csv")
# data wrangling
cali_fire_mod <- cali_fire %>%
count(ArchiveYear, MajorIncident)
cali_fire_major <- cali_fire %>%
count(ArchiveYear, MajorIncident) %>%
filter(MajorIncident == FALSE)
cali_fire_minor <- cali_fire %>%
count(ArchiveYear, MajorIncident) %>%
summarise(ArchiveYear, MajorIncident, n = -n) %>%
filter(MajorIncident == TRUE)
# loading package(s)
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(ggthemes)
# loading datasets
cali_fire <- read.csv(file = "data/cali_fire.csv")
# data wrangling
cali_fire_mod <- cali_fire %>%
count(ArchiveYear, MajorIncident)
cali_fire_major <- cali_fire %>%
count(ArchiveYear, MajorIncident) %>%
filter(MajorIncident == FALSE)
cali_fire_minor <- cali_fire %>%
count(ArchiveYear, MajorIncident) %>%
summarise(ArchiveYear, MajorIncident, n = -n) %>%
filter(MajorIncident == TRUE)
rsconnect::setAccountInfo(name='jmiprk',
token='88A5660C089DFA4D57BF29EFBBA0F717',
secret='<SECRET>')
Error: HTTP 401
GET https://api.shinyapps.io/v1/users/current/
bad signature
rsconnect::setAccountInfo(name='jmiprk',
token='88A5660C089DFA4D57BF29EFBBA0F717',
secret='7+Tow+4F7to2vKK5os7HCAoKEO1D5h0CaiGpTegN')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
ggplot() +
geom_sf(data = cali_map,
color = "grey50") +
stat_density_2d(data = cali_fire,
aes(x = Longitude,
y = Latitude,
fill = ..level..),
geom = "polygon",
show.legend = FALSE,
alpha = 0.4) +
scale_fill_distiller(palette = "YlOrRd") +
theme_classic() +
geom_point(data = cities,
aes(x = city_long,
y = city_lat),
size = 3) +
geom_text_repel(data = cities,
aes(x = city_long,
y = city_lat,
label = city_name),
box.padding = 0.6,
vjust = "bottom",
min.segment.length = 0,
seed = 9876) +
scale_y_continuous(breaks = seq(34, 42, 2),
limits = c(32, 42),
labels = c("34°N", "36°N","38°N", "40°N", "42°N")) +
scale_x_continuous(breaks = seq(-124, -114, 2),
labels = c("124°W", "122°W", "120°W",
"118°W", "116°W", "114°W")) +
labs(x = NULL,
y = NULL,
title = "Heatmap of California Wildfires (2013-2019)",
caption = "Source: Kaggle") +
theme(plot.title = element_text(face = "bold"))
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, dpi = 300)
ggplot() +
geom_sf(data = cali_map,
color = "grey50") +
stat_density_2d(data = cali_fire,
aes(x = Longitude,
y = Latitude,
fill = ..level..),
geom = "polygon",
show.legend = FALSE,
alpha = 0.4) +
scale_fill_distiller(palette = "YlOrRd") +
theme_classic() +
geom_point(data = cities,
aes(x = city_long,
y = city_lat),
size = 3) +
geom_text_repel(data = cities,
aes(x = city_long,
y = city_lat,
label = city_name),
box.padding = 0.6,
vjust = "bottom",
min.segment.length = 0,
seed = 9876) +
scale_y_continuous(breaks = seq(34, 42, 2),
limits = c(32, 42),
labels = c("34°N", "36°N","38°N", "40°N", "42°N")) +
scale_x_continuous(breaks = seq(-124, -114, 2),
labels = c("124°W", "122°W", "120°W",
"118°W", "116°W", "114°W")) +
labs(x = NULL,
y = NULL,
title = "Heatmap of California Wildfires (2013-2019)",
caption = "Source: Kaggle") +
theme(plot.title = element_text(face = "bold"))
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, dpi = 300)
# loading package(s)
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(ggthemes)
library(ggrepel)
library(tigris)
# loading datasets
cali_fire <- read.csv(file = "data/cali_fire.csv")
# data wrangling
cali_map <- counties("CA", cb = TRUE)
city_name <- c("Los Angeles", "San Diego", "San Jose")
city_long <- c(-118.244, -117.165, -121.895)
city_lat <- c(34.052, 32.716, 37.339)
cities <- data.frame(city_name, city_long, city_lat)
# loading package(s)
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(ggthemes)
library(ggrepel)
library(tigris)
# loading datasets
cali_fire <- read.csv(file = "data/cali_fire.csv")
# data wrangling
cali_map <- counties("CA", cb = TRUE)
city_name <- c("Los Angeles", "San Diego", "San Jose")
city_long <- c(-118.244, -117.165, -121.895)
city_lat <- c(34.052, 32.716, 37.339)
cities <- data.frame(city_name, city_long, city_lat)
ggplot() +
geom_sf(data = cali_map,
color = "grey50") +
stat_density_2d(data = cali_fire,
aes(x = Longitude,
y = Latitude,
fill = ..level..),
geom = "polygon",
show.legend = FALSE,
alpha = 0.4) +
scale_fill_distiller(palette = "YlOrRd") +
theme_classic() +
geom_point(data = cities,
aes(x = city_long,
y = city_lat),
size = 3) +
geom_text_repel(data = cities,
aes(x = city_long,
y = city_lat,
label = city_name),
box.padding = 0.6,
vjust = "bottom",
min.segment.length = 0,
seed = 9876) +
scale_y_continuous(breaks = seq(34, 42, 2),
limits = c(32, 42),
labels = c("34°N", "36°N","38°N", "40°N", "42°N")) +
scale_x_continuous(breaks = seq(-124, -114, 2),
labels = c("124°W", "122°W", "120°W",
"118°W", "116°W", "114°W")) +
labs(x = NULL,
y = NULL,
title = "Heatmap of California Wildfires (2013-2019)",
caption = "Source: Kaggle") +
theme(plot.title = element_text(face = "bold"))
# loading package(s)
library(tidyverse)
library(lubridate)
library(janitor)
library(scales)
library(ggthemes)
library(ggrepel)
library(tigris)
# loading datasets
cali_fire <- read.csv(file = "data/cali_fire.csv")
# data wrangling
cali_map <- counties("CA", cb = TRUE)
city_name <- c("Los Angeles", "San Diego", "San Jose")
city_long <- c(-118.244, -117.165, -121.895)
city_lat <- c(34.052, 32.716, 37.339)
cities <- data.frame(city_name, city_long, city_lat)
cali_fire <- read.csv(file = "data/cali_fire.csv")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(kableExtra)
install.packages("kableExtra")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(kableExtra)
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable() %>%
kable_styling()
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable() %>%
kable_styling("striped")
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable(caption = "Rate of colorblindness by gender.") %>%
kable_styling("striped")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(kableExtra)
knitr::include_graphics("images/plot_main.png")
knitr::include_graphics("images/plot_deutan.png")
knitr::include_graphics("images/plot_protan.png")
knitr::include_graphics("images/plot_tritan.png")
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable(caption = "Rate of colorblindness by gender.") %>%
kable_styling("striped")
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable(caption = "Rate of colorblindness by gender.") %>%
kable_styling("striped")
rate <- tibble(Colorblindness = c("Deutan", "Protan", "Tritan"),
Males = c("6.2%", "2.6%", "0.001%"),
Females = c("0.36%", "0.04%", "0.030"))
rate %>%
knitr::kable(caption = "Rate of colorblindness by gender.") %>%
kable_styling("striped")
knitr::include_graphics("images/plot_main.png")
- Tritan color blindness: color blindness that affects the eyes' blue cones.
<br>
- Makes blues and yellows look similar
- Rarest type
shiny::runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
?as.POSIXct
?paste
as.Date(paste("2015-04","-01",sep=""))
runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
fill <- us_unemployment %>%
filter(input$date)
us_unemployment <- read_csv("data/unemployment_rates.csv")
runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/Final')
us_unemployment <- read_csv("data/unemployment_rates.csv")
us_unemployment <- read_csv("data/unemployment_rates.csv")
shiny::runApp('Downloads/STAT 302/shiny_labs/unicorn123_final/final')
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
shiny::runApp('Dropbox/Mac/Desktop/STAT 302/shiny_labs/unicorn123_final')
library(readxl)
library(shiny)
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(viridis)
library(tools)
library(readxl)
library(ggiraph)
# data wrangling us_unemployment to
# contain region (state), month/year, and unemployment rate
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
runApp('Dropbox/Mac/Desktop/STAT 302/shiny_labs/unicorn123_final')
runApp('Dropbox/Mac/Desktop/STAT 302/shiny_labs/unicorn123_final')
shiny::runApp()
# final project
library(shiny)
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(viridis)
library(tools)
library(readxl)
library(ggiraph)
library(plotly)
# data wrangling us_unemployment to
# contain region (state), month/year, and unemployment rate
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
us_unemployment['region']
runApp()
View(us_unemployment)
runApp()
library(htmlwidgets)
ggplotly(us, tooltip='text') %>%
highlight(
"plotly_hover"
) %>%
config(displayModeBar = F)
runApp()
shiny::runApp()
runApp()
# line graph for labor_data
ggplot(unemployment_line, aes(x=date, y=value)) +
geom_line(aes(color=type),
key_glyph = "timeseries",
size = 1) +
theme_minimal() +
scale_color_manual(values=c("#dc1c13", "purple")) +
labs(x = 'Year',
y = "Rate",
title = "Predicting US Unemployment") +
theme(plot.title = element_text(size = 20,
vjust = 0.5,
hjust = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.text = element_text(size = 10))
library(shiny)
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(viridis)
library(tools)
library(readxl)
library(ggiraph)
library(plotly)
library(htmlwidgets)
# data wrangling us_unemployment to
# contain region (state), month/year, and unemployment rate
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
unemployment_line <- read_csv("data/unemployment.csv")
View(unemployment_line)
runApp()
library(shiny)
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(viridis)
library(tools)
library(readxl)
library(ggiraph)
library(plotly)
library(htmlwidgets)
# data wrangling us_unemployment to
# contain region (state), month/year, and unemployment rate
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
unemployment_line <- read_csv("data/unemployment.csv") %>%
arrange(desc(type))
View(unemployment_line)
runApp()
# line graph for labor_data
ggplot(unemployment_line, aes(x=date, y=value)) +
geom_line_interactive(aes(color=type),
key_glyph = "timeseries",
size = 1)
# line graph for labor_data
ggplot(unemployment_line, aes(x=date, y=value)) +
geom_line_interactive(aes(color=type),
size = 1) +
geom_text_interactive() +
theme_minimal() +
scale_color_manual(values=c("#dc1c13", "purple")) +
labs(x = 'Year',
y = "Rate",
title = "Predicting US Unemployment") +
theme(plot.title = element_text(size = 20,
vjust = 0.5,
hjust = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.text = element_text(size = 10))
print(typeof(us_unemployment))
print(typeof(us_unemployment[1]))
print(us_unemployment[1])
print(unemployment_line[1])
print(unemployment_line[date])
print(unemployment_line['date'])
print(unemployment_line['date'][1])
print(unemployment_line['date', 1])
print(typeof(unemployment_line['date'][1]))
print(unemployment_line['date'])
print(unemployment_line[1, 'date'])
print(typeof(unemployment_line[1, 'date']))
unemployment_line[['date']] = as.POSIXct(unemployment_line[['date']],
format = '%Y-%m-%d')
unemployment_line <- read_csv("data/unemployment.csv")
unemployment_line[['date']] = anydate(unemployment_line[['date']])
unemployment_line[['date']] = anytime::anydate(unemployment_line[['date']])
unemployment_line[['date']] = as.Date(unemployment_line[['date']])
runApp()
print(typeof(unemployment_line[1, 'date']))
print(unemployment_line[1, 'date'][0])
print(unemployment_line[1, 'date'])
print(unemployment_line[1, 'date'][1])
print(typeof(unemployment_line[1, 'date'][1]))
runApp()
unemployment_line$type[unemployment_line$type == 'predicted'] <- 'Predicted\n(Without COVID-19)'
unemployment_line$type[unemployment_line$type == 'predicted'] <- 'Predicted\n(Without COVID-19)'
library(shiny)
library(tidyverse)
library(sf)
library(maps)
library(dplyr)
library(viridis)
library(tools)
library(readxl)
library(ggiraph)
library(plotly)
library(htmlwidgets)
# data wrangling us_unemployment to
# contain region (state), month/year, and unemployment rate
us_unemployment <- read_csv("data/unemployment_rates.csv") %>%
mutate_all(as.character) %>%
pivot_longer(cols = -State,
names_to = "date",
values_to = "rate") %>%
rename(region = State) %>%
summarize(region = tolower(region),
date = date,
rate = rate)
unemployment_line <- read_csv("data/unemployment.csv")
unemployment_line$type[unemployment_line$type == 'actual'] <- 'Actual'
unemployment_line$type[unemployment_line$type == 'predicted'] <- 'Predicted\n(Without COVID-19)'
runApp()
runApp()
apple <- c(1, 2, 3, 4)
install.packages("dplyr")
shiny::runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#library(GGally)
library(dplyr)
#install.packages("psych", dependencies = TRUE)
summary.stat <- function(df){
title = "Summary Statistics"
sum1 <- df %>% psych::describe()
stat <- sum1 %>% select(n, mean, sd, median, trimmed, min, max, skew, kurtosis) %>% t()
kable <- stat %>% kbl(caption = title) %>% kable_paper("hover", full_width = F)
return(kable)
}
dir <- Your_Folder_Path_here
# dir <- Your_Folder_Path_here
# Data can be found at https://drive.google.com/file/d/1ZsvS1Af9QZqs1EmoPjCImnZn03n4QbDq/view?usp=sharing
trends <- read.csv("Image_Search_Data copy.csv")
shiny::runApp('Dropbox/Mac/Desktop/projects/nutrition_calculator')
runApp('Dropbox/Mac/Desktop/projects/nutrition_calculator')
